---
- name: Check if redis exporter exist
  stat:
    path: "{{ exporter_bin }}"
  register: __check_exporter_present

- name: Create monitoring user
  user:
    name: "{{ monitoring_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: Create redis exporter config dir
  file:
    path: "{{ exporter_dir_conf }}"
    state: directory
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"

- name: If redis exporter exist get version
  shell: "cat {{ exporter_dir_service }} | grep Version | sed s/'.*Version '//g"
  when: __check_exporter_present.stat.exists == true
  changed_when: false
  register: __get_exporter_version

- name: Download and unzip redis exporter if not exist
  unarchive:
    src: "{{ exporter_url_file }}"
    dest: /tmp/
    remote_src: yes
    validate_certs: no

- name: Move the binary to the final destination
  copy:
    src: "{{ exporter_tmp_file }}"
    dest: "{{ exporter_bin }}"
    owner: "{{ monitoring_user }}"
    group: "{{ monitoring_group }}"
    mode: 0755
    remote_src: yes
  when: __check_exporter_present.stat.exists == false or not __get_exporter_version.stdout == exporter_version

- name: Clean
  file:
    path: "{{ exporter_tmp_dir }}"
    state: absent

- name: Install service
  template:
    src: exporter.service.j2
    dest: "{{ exporter_dir_service }}"
    owner: root
    group: root
    mode: 0755
  notify: reload_daemon_and_restart_exporter

- meta: flush_handlers
- name: Service always started
  systemd:
    name: "{{ service_name }}"
    state: started
    enabled: yes
